name: Release Binaries

on:
  push:
    tags:
      - 'v*.*.*'
  workflow_dispatch:
    inputs:
      tag:
        description: 'The tag to build and release (e.g., v1.0.0)'
        required: true

defaults:
  run:
    shell: bash

jobs:
  build:
    name: Build for ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]

    steps:
      - name: Set tag reference
        id: set_ref
        run: |
          if [[ "${{ github.event_name }}" == "workflow_dispatch" ]]; then
            echo "REF=refs/tags/${{ github.event.inputs.tag }}" >> $GITHUB_OUTPUT
          else
            echo "REF=${{ github.ref }}" >> $GITHUB_OUTPUT
          fi

      - name: Checkout repository at specific tag
        uses: actions/checkout@v4
        with:
          ref: ${{ steps.set_ref.outputs.REF }}

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci --no-audit --no-progress

      - name: Build project
        run: npm run build

      - name: Get version from tag
        id: get_version
        run: echo "VERSION=$(basename ${{ steps.set_ref.outputs.REF }})" >> $GITHUB_OUTPUT

      - name: Prepare Binary (Linux)
        if: runner.os == 'Linux'
        run: |
          npm run build:standalone:linux
          mv dist/template-engine-linux dist/template-engine-${{ steps.get_version.outputs.VERSION }}-linux

      - name: Prepare Binary (macOS)
        if: runner.os == 'macOS'
        run: |
          npm run build:standalone:macos
          mv dist/template-engine-macos dist/template-engine-${{ steps.get_version.outputs.VERSION }}-macos

      - name: Prepare Binary (Windows)
        if: runner.os == 'Windows'
        run: |
          npm run build:standalone:windows
          mv dist/template-engine-win.exe dist/template-engine-${{ steps.get_version.outputs.VERSION }}-win.exe

      - name: Upload binary artifact
        uses: actions/upload-artifact@v4
        with:
          name: binary-${{ runner.os }}
          # CORRECTED: Use the toLowerCase() function for valid syntax
          path: dist/template-engine-${{ steps.get_version.outputs.VERSION }}-${{ runner.os == 'Windows' && 'win.exe' || toLowerCase(runner.os) }}
          if-no-files-found: error

  publish-release:
    name: Publish Release
    runs-on: ubuntu-latest
    needs: build
    permissions:
      contents: write

    steps:
      - name: Determine tag name for release
        id: get_tag
        run: |
          if [[ "${{ github.event_name }}" == "workflow_dispatch" ]]; then
            echo "TAG_NAME=${{ github.event.inputs.tag }}" >> $GITHUB_OUTPUT
          else
            echo "TAG_NAME=${{ github.ref_name }}" >> $GITHUB_OUTPUT
          fi

      - name: Download all binary artifacts
        uses: actions/download-artifact@v4
        with:
          path: dist

      - name: List downloaded files for verification
        run: ls -R dist

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ steps.get_tag.outputs.TAG_NAME }}
          name: "Release ${{ steps.get_tag.outputs.TAG_NAME }}"
          generate_release_notes: true
          files: dist/*/*
